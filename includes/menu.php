<?php

// Activate menu function
add_action('init', 'my_custom_menus');

function my_custom_menus()
{
    register_nav_menus(array(
        'main-menu' => 'Main Menu',		'resp_menu' => 'Responsive Menu'		
    ));
}
		// Responsive walker menu	class Walker_Responsive_Menu extends Walker_Nav_Menu {				function start_el(&$output, $item, $depth = 0, $args = array(), $id = 0) {			global $wp_query;					$item_output = $attributes = $prepend ='';			$class_names = $value = '';			$classes = empty( $item->classes ) ? array() : (array) $item->classes;			$class_names = join( ' ', apply_filters( '', array_filter( $classes ), $item ) );						$class_names = ' class="'. esc_attr( $class_names ) . '"';			   			// Create a visual indent in the list if we have a child item.			$visual_indent = ( $depth ) ? str_repeat('&nbsp;&nbsp;&nbsp;&nbsp;<i class="fa fa-circle"></i>', $depth) : '';			// Load the item URL			$attributes .= ! empty( $item->url ) ? ' href="'   . esc_attr( $item->url ) .'"' : '';			// If we have hierarchy for the item, add the indent, if not, leave it out.			// Loop through and output each menu item as this.			if($depth != 0) {				$item_output .= '<a '. $class_names . $attributes .'>&nbsp;&nbsp;&nbsp;&nbsp;<i class="fa fa-circle"></i>' . $item->title. '</a><br>';			} else {				$item_output .= '<a ' . $class_names . $attributes .'><strong>'.$prepend.$item->title.'</strong></a><br>';			}			// Make the output happen.			$output .= apply_filters( 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );		}	}			// Main walker menu		class Walker_Main_Menu extends Walker_Nav_Menu	{				function start_el(&$output, $item, $depth = 0, $args = array(), $id = 0) {		   $this->curItem = $item;		   global $wp_query;		   $indent = ( $depth ) ? str_repeat( "\t", $depth ) : '';		   $class_names = $value = '';		   $classes = empty( $item->classes ) ? array() : (array) $item->classes;		   $class_names = join( ' ', apply_filters( 'nav_menu_css_class', array_filter( $classes ), $item ) );		   $class_names = ' class="'. esc_attr( $class_names ) . '"';		   $image  = ! empty( $item->custom )     ? ' <img src="'.esc_attr($item->custom).'">' : '';		   $output .= $indent . '<li id="menu-item-'.rand(0,9999).'-'. $item->ID . '"' . $value . $class_names .' );">';		   $attributes_title  = ! empty( $item->attr_title ) ? ' <i class="fa '  . esc_attr( $item->attr_title ) .'"></i>' : '';		   $attributes  = ! empty( $item->target )     ? ' target="' . esc_attr( $item->target     ) .'"' : '';		   $attributes .= ! empty( $item->xfn )        ? ' rel="'    . esc_attr( $item->xfn        ) .'"' : '';		   $attributes .= ! empty( $item->url )        ? ' href="'   . esc_attr( $item->url        ) .'"' : '';		   $prepend = '';		   $append = '';		   if($depth != 0)		   {				$append = $prepend = '';		   }			$item_output = $args->before;			$item_output .= '<a '. $attributes .'>';			$item_output .= $attributes_title.$args->link_before .$prepend.apply_filters( 'the_title', $item->title, $item->ID ).$append;			$item_output .= $args->link_after;			$item_output .= '</a>';				$item_output .= $args->after;			$output .= apply_filters( 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );		}	}
?>